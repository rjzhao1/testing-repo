name: Sync Prod to Dev

on: workflow_dispatch

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: mysql
          MYSQL_USER: dev
          MYSQL_PASSWORD: dev
          MYSQL_ROOT_PASSWORD: dev
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        node-version: ["14.x"]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure Azure Credentials
        run: echo 'setup Azure Credentials'

      - name: Read dev secrets from Azure into environment variables
        run: echo 'setup dev Azure secret into environment variable'

      - name: Read dev secrets from Azure into environment variables
        run: echo 'setup prod Azure secret into environment variable'

      - uses: SpicyPizza/create-envfile@v1.2
        with:
          envkey_APP_NAME: 'RAVENVOLT'
          file_name: .env


      - name: Create Mysql Password FIle
        run: mysql_config_editor set --login-path=dev --user=dev --host=localhost -p

      - name: Create test database
      - run: mysql --login-path=dev -e "CREATE DATABASE test;"

      # - name: Connect to Dev DB
      #   run: ssh -fNT -o StrictHostKeyChecking=no -i ./moves.pem ec2-user@ec2-3-84-181-81.compute-1.amazonaws.com -L 5434:db.dev.my.vetmoves.com:5432

      # - name: Connect to Prod DB
      #   run: ssh -fNT -o StrictHostKeyChecking=no -i ./moves.pem ec2-user@ec2-3-84-181-81.compute-1.amazonaws.com -L 5437:db.my.vetmoves.com:5432

      # - name: Sync Prod DB to Dev DB
      #   run: pg_dump -Fc -O -x -h localhost -p 5437 -U $PROD_DB_USERNAME $PROD_DB_DATABASE --exclude-table-data 'cache*' --exclude-table-data 'password_resets' --exclude-table-data 'personal_access_tokens' --exclude-table-data 'sessions' --exclude-table-data 'telescope*' | pg_restore -O -x -c --if-exists -h localhost -p 5434 -U $DEV_DB_USERNAME -d $DEV_DB_DATABASE
      #   env:
      #     PGPASSFILE: .pgpass

      # - name: Seed Dev DB
      #   run: php artisan db:seed
